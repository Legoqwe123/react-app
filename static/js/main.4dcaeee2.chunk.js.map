{"version":3,"sources":["hoc/Layout/Layout.js","components/operatorList/operatorItem/operatorItem.js","components/operatorList/operatorList.js","components/stepList/stepItem/stepItem.js","components/stepList/stepList.js","components/UI/btnExit/btnExit.js","components/UI/input/input.js","components/statusOperation/statusOperation.js","components/PaymentForm/paymentform.js","components/dropDown/dropDownList/dropDownItem/dropDownItem.js","components/dropDown/dropDownList/dropDownList.js","components/dropDown/dropdown.js","components/backdrop/backdrop.js","container/terminal/payment.js","App.js","serviceWorker.js","index.js"],"names":["Layout","this","props","children","Component","OperatorItem","Transition","in","operator","added","timeout","unmountOnExit","state","className","onClick","onSelect","alt","name","src","OperatorList","map","item","index","key","img","onSelectOp","stepItem","divStyle","active","push","join","step","StepList","steps","return","InputForm","errClass","valid","type","placeholder","mask","maskChar","mskChar","onChange","event","onChangs","controlName","value","errMsg","StatusOperation","timer","start","end","tick","startTimer","timerId","setInterval","clearInterval","setState","closeWindow","setTimeout","returnMain","Fragment","status","msg","secondStep","PaymentForm","sendStatus","formControls","phone","errorMessage","cost","clearInputs","Object","keys","submitHandler","preventDefault","validatePhone","validateCost","validate","success","control","target","min","max","Math","floor","random","inputValue","split","trim","length","shouldValidate","validation","sendStatusRandom","getRandomFloat","onSubmit","select","renderInputs","React","DropDownItem","itemStyle","opList","funcAdd","window","location","origin","icon","DropDownList","class","oplist","Dropdown","useState","dropdown","toggleDropdown","reverseIcon","activeDrop","width","height","viewBox","fill","xmlns","d","Backdrop","Payment","operators","lastStep","returnMainPage","onSelectOperator","op","addOperator","stateAdd","selectOp","filter","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iaAwBeA,G,uLAfP,OACI,6BAEI,8BAEIC,KAAKC,MAAMC,e,GARVC,c,QCuCNC,EAzCM,SAAAH,GAGpB,OAGC,kBAACI,EAAA,EAAD,CACMC,GAAML,EAAMM,SAASC,MACrBC,QAAW,IACXC,eAAa,IAIb,SAAAC,GAAK,OAAI,yBACPC,UAAS,8BAA2BD,GACpCE,QAAW,kBAAKZ,EAAMa,SAASb,EAAMM,YAIvC,yBAEEK,UAAY,uBACZG,IAAMd,EAAMe,KACZC,IAAKhB,EAAMgB,WCSNC,G,MA/BM,SAAAjB,GAGjB,OAEA,wBAAIW,UAAU,iBACLX,EAAMM,SAASY,KAAI,SAACC,EAAMC,GAEvB,OAEI,kBAAC,EAAD,CAEIC,IAAKD,EACLd,SAAWa,EACXJ,KAAMI,EAAKJ,KACXC,IAAKG,EAAKG,IACVT,SAAYb,EAAMuB,mBCH3BC,EAhBE,SAAAxB,GAGf,IAAMyB,EAAW,CAAC,mBAOlB,OALqB,IAAjBzB,EAAM0B,QACRD,EAASE,KAAK,eAKZ,yBAAKhB,UAAac,EAASG,KAAK,MAAO5B,EAAM6B,OCqBpCC,G,MA7BE,SAAA9B,GAAK,OAIhB,wBAAIW,UAAU,aAETX,EAAM+B,MAAMb,KAAI,SAACC,EAAKC,GAElB,OAEK,kBAAC,EAAD,CAECC,IAAOD,EACPM,OAAUP,EAAKO,OACfG,KAAQV,EAAKU,a,OChBnB,G,YAAA,SAAA7B,GAAK,OAEjB,yBAAKW,UAAW,WAAWC,QAAWZ,EAAMgC,QACzC,kC,iBCkCSC,EAlCG,SAAAjC,GAEd,IAAMkC,EAAW,GAOlB,OALqB,IAAhBlC,EAAMmC,OACND,EAASP,KAAK,OAMjB,yBAAKhB,UAAU,cAEf,kBAAC,IAAD,CACGA,UAAauB,EAASN,KAAK,KAC3BQ,KAAQpC,EAAMoC,KACdC,YAAcrC,EAAMqC,YACpBC,KAAQtC,EAAMsC,KACdC,SAAYvC,EAAMwC,QAClBC,SAAa,SAAAC,GAAK,OAAI1C,EAAM2C,SAASD,EAAM1C,EAAM4C,cACjDC,MAAS7C,EAAM6C,SAGD,IAAhB7C,EAAMmC,MACN,0BAAMxB,UAAU,eAAeX,EAAM8C,QACnC,OC4EOC,G,iNAtGXrC,MAAQ,CAEJsC,MAAO,CACHC,MAAO,EACPC,IAAK,EACLC,KAAM,I,EAIdC,WAAa,WAET,IAAIJ,EAAK,eAAQ,EAAKtC,MAAMsC,OAExBK,EAAUC,aAAY,WAEtBN,EAAMC,OAAS,EAEXD,EAAMC,QAAUD,EAAME,MACtBF,EAAMC,MAAQ,EACdM,cAAcF,IAGlB,EAAKG,SAAS,CACVR,YAGmB,IAAxB,EAAKtC,MAAMsC,MAAMG,O,EAMxBM,YAAc,WAEVC,YAAW,WAEP,EAAK1D,MAAM2D,eAEa,IAAzB,EAAKjD,MAAMsC,MAAMC,Q,wEAOpB,OAEI,kBAAC,IAAMW,SAAP,MAGoC,IAA/B7D,KAAKC,MAAM+B,MAAM,GAAGL,OAIjB,kBAAC,IAAMkC,SAAP,MAEkC,IAA7B7D,KAAKC,MAAM6D,OAAOA,OAEb9D,KAAK0D,cAEL,KAIN,yBAAK9C,UAAU,kBAEX,uBAAGA,UAAU,kBAAkBZ,KAAKC,MAAM6D,OAAOC,MAEnB,IAA7B/D,KAAKC,MAAM6D,OAAOA,OAEb,kBAAC,IAAMD,SAAP,KAEG7D,KAAKqD,aACN,uBAAGzC,UAAU,gBAAb,iRAA8E,6BAAOZ,KAAKW,MAAMsC,MAAMC,QAIxG,4BAAQtC,UAAU,gBAAgBC,QAASb,KAAKC,MAAM+D,YAAtD,mEAQZ,U,GAvFQ7D,cCkNf8D,E,2MA3MZtD,MAAQ,CAEPuD,WAAa,CAEX,CAAEJ,QAAQ,EAAOC,IAAK,oIAEtB,CAAED,QAAQ,EAAQC,IAAK,oMAI1BI,aAAc,CACXC,MAAO,CACHtB,MAAO,GACPuB,aAAc,0LACdhC,KAAM,MACNE,KAAK,oBACLC,SAAU,IACVF,YAAa,mFAGfgC,KAAM,CACJxB,MAAO,GACPuB,aAAc,kJACdhC,KAAM,OACNC,YAAa,kJACbC,KAAK,OACLC,SAAU,Q,EAOpB+B,YAAc,WAEZ,IAAMJ,EAAY,eAAO,EAAKxD,MAAMwD,cAClBK,OAAOC,KAAKN,GAErBhD,KAAI,SAAAC,GAEX+C,EAAa/C,GAAM0B,MAAQ,MAI9B,EAAKW,SAAS,CACbU,kB,EAMFO,cAAgB,SAAA/B,GAEdA,EAAMgC,iBAEN,IAAMR,EAAY,eAAO,EAAKxD,MAAMwD,cAClBK,OAAOC,KAAKN,GAErBhD,KAAI,SAAAC,GAEV+C,EAAa/C,KAAU,EAAKT,MAAMwD,aAAaC,MAE5C,EAAKQ,cAAcT,EAAa/C,GAAO,IACvC,EAAKyD,aAAaV,EAAa/C,GAAO,SAIR,IAAhC+C,EAAaC,MAAMU,WAAoD,IAA/BX,EAAaG,KAAKQ,WAC1D,EAAK7E,MAAM8E,UACX,EAAKR,eAGX,EAAKd,SAAS,CACVU,kB,EAkCJzB,SAAW,SAACC,EAAM3B,GAEhB,IAAMmD,EAAY,eAAO,EAAKxD,MAAMwD,cAC9Ba,EAAO,eAAOb,EAAanD,IACjCgE,EAAQlC,MAASH,EAAMsC,OAAOnC,MAC9BqB,EAAanD,GAAQgE,EAErB,EAAKvB,SAAS,CACZU,kB,8EArCWe,EAAKC,GAClB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,K,oCAGpCK,EAAYnD,GAEXmD,EAAWzC,MAAM0C,MAAM,WAAW3D,KAAK,IAAI4D,OAG/CC,SAAWtD,EAClBmD,EAAWT,UAAW,EAEtBS,EAAWT,UAAW,I,mCAKbS,EAAYnD,GAEvB,IAAMU,EAAQyC,EAAWzC,MAAM0C,MAAM,WAAW3D,KAAK,IAAI4D,OAGvDF,EAAWT,SADThC,GAAQ,GAAKA,GAASV,I,qCAqBX,IAAD,OAGX,OAAOoC,OAAOC,KAAKzE,KAAKW,MAAMwD,cAAchD,KAAI,SAAC0B,EAAaxB,GAE7D,IAAM2D,EAAU,EAAKrE,MAAMwD,aAAatB,GAExC,OACG,kBAAC,EAAD,CAECvB,IAAOuB,EAAcxB,EACrBgB,KAAQ2C,EAAQ3C,KAChBS,MAASkC,EAAQlC,MACjBV,MAAS4C,EAAQF,SACjB/B,OAAUiC,EAAQX,aAClBsB,eAAkBX,EAAQY,WAC1BtD,YAAe0C,EAAQ1C,YACvBC,KAAQyC,EAAQzC,KAChBE,QAAWuC,EAAQxC,SACnBI,SAAa,SAAAD,GAAK,OAAI,EAAKD,SAASC,EAAME,W,+BAW1C,IAAD,OAGHgD,EAAmB7F,KAAKW,MAAMuD,WAAWlE,KAAK8F,eAAe,EAAE,IAEnE,OAGE,kBAAC,IAAMjC,SAAP,KAEE,kBAAC,EAAD,CACGG,WAAchE,KAAKC,MAAM+D,WACzBJ,WAAc5D,KAAKC,MAAMgC,OACzBD,MAAShC,KAAKC,MAAM+B,MACpB8B,OAAU+B,IAIb,kBAACxF,EAAA,EAAD,CACEC,GAAIN,KAAKC,MAAM+B,MAAM,GAAGL,OACxBlB,QAAS,MAGR,SAAAE,GAAK,OACJ,0BAAMC,UAAS,uBAAkBD,GAASoF,SAAU,EAAKrB,eAEzD,kBAAC,EAAD,CAASzC,OAAQ,EAAKhC,MAAMgC,SAE1B,yBAAKhB,IAAK,EAAKhB,MAAM+B,MAAM,GAAGL,OAAS,EAAK1B,MAAM+F,OAAO,GAAGzE,IAAM,KAAMX,UAAU,sBAElF,yBAAKA,UAAU,uBAAf,2GAEC,EAAKqF,eAGP,4BAAQ5D,KAAK,SAASzB,UAAU,wBAAhC,6D,GA3LesF,IAAM/F,W,QCsBjBgG,EA1BM,SAAAlG,GAElB,IAAMmG,EAAY,CAAC,uBAQtB,OANOnG,EAAMoG,OAAO7F,OACb4F,EAAUxE,KAAK,aAOf,wBAAIhB,UAAawF,EAAUvE,KAAK,KAAMhB,QAAW,WAAOZ,EAAMqG,QAAQrG,EAAMoG,UACxE,yBACApF,IAAKsF,OAAOC,SAASC,OAASxG,EAAMyG,KACpC9F,UAAY,qBACZG,IAAMd,EAAMe,OAEhB,0BAAMJ,UAAY,uBAAuBX,EAAMe,QCcvC2F,EA/BM,SAAA1G,GAGjB,OAGG,wBAAIW,UAAS,wBAAmBX,EAAM2G,QAEhC3G,EAAM4G,OAAO1F,KAAI,SAACC,EAAMC,GAErB,OAEG,kBAAC,EAAD,CAEEC,IAAOD,EACPqF,KAAOtF,EAAKsF,KACZ1F,KAAQI,EAAKJ,KACbsF,QAAWrG,EAAMqG,QACjBD,OAASjF,SCsCd0F,G,MAvDG,SAAA7G,GAAU,IAAD,EAGS8G,oBAAS,GAHlB,mBAGlBC,EAHkB,KAGTC,EAHS,KAIlBC,EAAc,CAAC,iBACfC,EAAY,CAAC,kBAQnB,OANIH,IACAE,EAAYtF,KAAK,WACjBuF,EAAWvF,KAAK,WAOZ,yBAAKhB,UAAU,YAKd,yBAAKA,UAAYuG,EAAWtF,KAAK,KAAMhB,QAAW,kBAAKoG,GAAgBD,KAAvE,oGACA,yBAAKI,MAAM,KAAKC,OAAO,IAAIC,QAAQ,WAAWC,KAAK,OAAOC,MAAM,6BAA6B5G,UAAWsG,EAAYrF,KAAK,MACtI,0BAAM4F,EAAE,ixBAAixBF,KAAK,cAKjxB,kBAAClH,EAAA,EAAD,CACCC,GAAK0G,EACLvG,QAAW,IACXC,eAAa,IAGb,SAAAC,GAAK,OAEN,kBAAC,EAAD,CAEAkG,OAAS5G,EAAMoG,OACfO,MAASjG,EACT2F,QAAWrG,EAAMqG,gBCzCfoB,G,MAFE,SAAAzH,GAAK,OAAI,yBAAKW,UAAW,eCuK3B+G,E,2MA9JbhH,MAAQ,CAENiH,UAAW,CACT,CAAE5G,KAAM,qBAAQO,IAAK,eAAgBf,OAAO,EAAMkG,KAAM,2BACxD,CAAE1F,KAAM,uCAAWO,IAAK,mBAAoBf,OAAO,EAAOkG,KAAM,+BAChE,CAAE1F,KAAM,6CAAYO,IAAK,oBAAqBf,OAAO,EAAOkG,KAAM,gCAClE,CAAE1F,KAAM,6BAAWO,IAAK,iBAAkBf,OAAO,EAAQkG,KAAM,6BAC/D,CAAE1F,KAAM,OAASO,IAAK,gBAAiBf,OAAO,EAAQkG,KAAM,6BAG9D1E,MAAO,CAEL,CAAEF,KAAM,EAAGH,QAAQ,GACnB,CAAEG,KAAM,EAAGH,QAAQ,GACnB,CAAEG,KAAM,EAAGH,QAAQ,K,EAMvBqC,WAAa,WAEX,IAAMhC,EAAQ,EAAKrB,MAAMqB,MAEzBA,EAAM,GAAGL,QAAS,EAClBK,EAAM,GAAGL,QAAS,EAElB,EAAK8B,SAAS,CACZzB,W,EAKJ6F,SAAW,WACT,IAAM7F,EAAQ,EAAKrB,MAAMqB,MAEzBA,EAAM,GAAGL,QAAS,EAElB,EAAK8B,SAAS,CACZzB,W,EAIJ8F,eAAiB,WAEf,EAAKrE,SAAS,CACZzB,MAAO,CACL,CAAEF,KAAM,EAAGH,QAAQ,GACnB,CAAEG,KAAM,EAAGH,QAAQ,GACnB,CAAEG,KAAM,EAAGH,QAAQ,O,EAOzBoG,iBAAmB,SAAAC,GAEjB,IAAMhH,EAAOgH,EAAGhH,KAEhB,EAAKgD,aAEL,EAAKP,SAAS,CACZ9B,OAAQX,K,EAKZiH,YAAc,SAAA1H,GAEZ,IAAM2H,EAAW3H,EAEK,+BAAlBA,EAASS,MAAuC,SAAlBT,EAASS,OACzCkH,EAAS1H,MAAQ0H,EAAS1H,OAAQ,EAAQ0H,EAAS1H,OAAQ,GAG7D,EAAKiD,SAAS,CACZlD,SAAU2H,K,wEAKJ,IAAD,OAEDN,EAAY5H,KAAKW,MAAMiH,UACvBO,EAAWP,EAAUQ,QAAO,SAAAhH,GAAI,OAAIA,EAAKJ,OAAS,EAAKL,MAAMgB,UAErE,OAGE,kBAAC,IAAMkC,SAAP,MAIkC,IAA/B7D,KAAKW,MAAMqB,MAAM,GAAGL,OAClB,kBAAC,EAAD,MACA,KAID,yBAAKf,UAAU,UAEf,kBAAC,EAAD,CACIoB,MAAOhC,KAAKW,MAAMqB,QAGpB,kBAAC,EAAD,CACEsE,QAAWtG,KAAKiI,YAChB5B,OAAUuB,KAMZ5H,KAAKW,MAAMqB,MAAM,GAAGL,QAAU3B,KAAKW,MAAMqB,MAAM,GAAGL,OAEhD,KAEA,kBAAC,IAAMkC,SAAP,KACA,uBAAGjD,UAAU,YAAb,2DACA,wBAAIA,UAAU,aAAd,4GAQJ,yBAAKA,UAAU,gBAGT,kBAAC,EAAD,CACEqB,OAAQjC,KAAK8H,eACb9F,MAAOhC,KAAKW,MAAMqB,MAClBgE,OAAQmC,EACRpD,QAAW/E,KAAK6H,SAChB7D,WAAchE,KAAKgE,cAM3B,yBAAKpD,UAAU,YAEb,kBAAC,EAAD,CACEL,SAAUqH,EACVpG,WAAYxB,KAAK+H,yB,GArJP5H,aCePkI,E,iLAdX,OAEE,kBAAC,EAAD,KAGC,kBAAC,EAAD,W,GAVWlI,aCOEmI,QACW,cAA7B/B,OAAOC,SAAS+B,UAEe,UAA7BhC,OAAOC,SAAS+B,UAEhBhC,OAAOC,SAAS+B,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.4dcaeee2.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { Component } from \"react\";\r\nimport './Layout.scss';\r\n\r\n\r\nclass Layout extends Component {\r\n   \r\n    render(){\r\n        return(\r\n            <div>\r\n\r\n                <main>\r\n                     \r\n                   {this.props.children}\r\n                \r\n                </main>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Layout;","import React from 'react';\r\nimport { Transition } from 'react-transition-group';\r\n\r\n\r\nconst OperatorItem = props => {\r\n \r\n   \r\n return( \r\n       \r\n  \r\n  <Transition\r\n        in = {props.operator.added}\r\n        timeout = {600}\r\n        unmountOnExit\r\n        \r\n       >\r\n   \r\n       {state => <div \r\n          className = {`operator-list__item ${state}`}\r\n          onClick = {()=> props.onSelect(props.operator)}\r\n         \r\n         > \r\n     \r\n        <img \r\n        \r\n          className = 'operator-list__image' \r\n          alt ={props.name} \r\n          src={props.src}>\r\n\r\n       </img> \r\n         </div>}\r\n       \r\n       </Transition>\r\n     \r\n       \r\n    )\r\n    \r\n    \r\n}\r\n     \r\n    \r\n      \r\n\r\n\r\n\r\nexport default OperatorItem","import React from 'react';\r\nimport OperatorItem from '../operatorList/operatorItem/operatorItem';\r\nimport  './operatorList.scss';\r\n\r\n\r\nconst OperatorList = props => {\r\n\r\n   \r\n    return (\r\n\r\n    <ul className='operator-list'>\r\n            {props.operator.map((item, index) => {\r\n\r\n                return (\r\n\r\n                    <OperatorItem\r\n                    \r\n                        key={index}\r\n                        operator= {item}\r\n                        name={item.name}\r\n                        src={item.img}\r\n                        onSelect = {props.onSelectOp}\r\n\r\n                   \r\n                     />\r\n\r\n                )\r\n\r\n            })}\r\n        </ul>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default OperatorList;","import React from 'react';\r\n\r\nconst stepItem = props => {\r\n   \r\n  \r\n  const divStyle = ['step-list__item'];\r\n  \r\n  if (props.active === true){\r\n    divStyle.push('step-active')\r\n  } \r\n   \r\n   \r\n  return (\r\n      <div className = {divStyle.join(' ')}>{props.step}</div>\r\n   )\r\n  \r\n}\r\n\r\nexport default stepItem","import React from 'react';\r\nimport StepItem from './stepItem/stepItem';\r\nimport  './stepList.scss';\r\n\r\n\r\nconst StepList = props => ( \r\n\r\n     \r\n     \r\n      <ul className='step-list'>\r\n       {\r\n           props.steps.map((item,index) => {\r\n               \r\n               return(\r\n                    \r\n                    <StepItem\r\n   \r\n                     key = {index}\r\n                     active = {item.active}\r\n                     step = {item.step}\r\n                    \r\n                    \r\n                    />\r\n               )\r\n           })\r\n       }\r\n      </ul>\r\n\r\n     \r\n\r\n   \r\n)\r\n\r\n\r\nexport default StepList","import React from 'react';\r\nimport  './btnexit.scss';\r\n\r\nexport default props => (\r\n   \r\n   <div className ='btn-exit' onClick = {props.return}>\r\n      <span></span>\r\n   </div>\r\n\r\n)\r\n\r\n\r\n ","import React from 'react';\r\nimport InputMask from 'react-input-mask';\r\n\r\n\r\n\r\n\r\nconst InputForm = props => {\r\n\r\n    const errClass = [];\r\n\r\n    if (props.valid === false){\r\n        errClass.push('err')\r\n    }\r\n\r\n   \r\n   return( \r\n        \r\n     <div className=\"input-wrap\">\r\n    \r\n     <InputMask \r\n        className = {errClass.join(' ')}\r\n        type = {props.type} \r\n        placeholder= {props.placeholder} \r\n        mask = {props.mask} \r\n        maskChar = {props.mskChar} \r\n        onChange = { event => props.onChangs(event,props.controlName)} \r\n        value = {props.value}\r\n      />\r\n     \r\n     {props.valid === false ? \r\n      <span className=\"err-message\">{props.errMsg}</span>\r\n      : null\r\n    }\r\n   \r\n\r\n    </div>\r\n     \r\n   )\r\n}\r\n\r\nexport default InputForm","import React, { Component } from 'react';\r\nimport \"./statusOperation.scss\";\r\n\r\nclass StatusOperation extends Component {\r\n\r\n    state = {\r\n        \r\n        timer: {\r\n            start: 4,\r\n            end: 0,\r\n            tick: 1,\r\n        }\r\n    }\r\n\r\n    startTimer = () => {\r\n\r\n        let timer = { ...this.state.timer };\r\n\r\n        let timerId = setInterval(() => {\r\n\r\n            timer.start -= 1;\r\n\r\n            if (timer.start === timer.end) {\r\n                timer.start = 5\r\n                clearInterval(timerId)\r\n            }\r\n\r\n            this.setState({\r\n                timer\r\n            })\r\n\r\n        }, this.state.timer.tick * 1000);\r\n\r\n\r\n    }\r\n\r\n\r\n    closeWindow = () => {\r\n\r\n        setTimeout(() => {\r\n\r\n            this.props.returnMain()\r\n\r\n        }, this.state.timer.start * 1000)\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n\r\n                {this.props.steps[2].active === true\r\n\r\n                    ?\r\n\r\n                    <React.Fragment>\r\n\r\n                        {this.props.status.status === true\r\n\r\n                            ? this.closeWindow()\r\n\r\n                            : null\r\n\r\n                        }\r\n\r\n                        <div className='status-wrapper'>\r\n\r\n                            <p className=\"status-message\">{this.props.status.msg}</p>\r\n\r\n                            {this.props.status.status === true\r\n\r\n                                ? <React.Fragment>\r\n\r\n                                    {this.startTimer()}\r\n                                    <p className=\"status-timer\">Вы будете перенаправлены на главную страницу через<br />{this.state.timer.start}</p>\r\n\r\n                                </React.Fragment>\r\n\r\n                                : <button className=\"status-button\" onClick={this.props.secondStep} >К терминалу</button>\r\n\r\n                            }\r\n\r\n                        </div>\r\n\r\n                    </React.Fragment>\r\n\r\n                    : null\r\n\r\n                }\r\n\r\n\r\n            </React.Fragment>\r\n\r\n\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default StatusOperation","import React from 'react';\r\nimport  './form.scss';\r\nimport BtnExit from '../UI/btnExit/btnExit';\r\nimport FormInput from '../UI/input/input';\r\nimport StatusOperation from '../statusOperation/statusOperation';\r\nimport { Transition } from 'react-transition-group';\r\n\r\n\r\nclass PaymentForm extends React.Component {\r\n\r\n   state = {\r\n\r\n    sendStatus : [\r\n      \r\n      { status: true , msg: \"Операция прошла успешно\"},\r\n     \r\n      { status: false , msg: \"Произошла ошибка, попробуйте еще раз\" }\r\n   \r\n    ] ,\r\n\r\n   formControls: {\r\n      phone: {\r\n          value: '',\r\n          errorMessage: \"Введите корректный номер телефона\",\r\n          type: \"tel\",\r\n          mask:\"+8\\(999)-999-99-99\",\r\n          maskChar: '_',\r\n          placeholder: \"Номер телефона\",\r\n        },\r\n        \r\n        cost: {\r\n          value: '',\r\n          errorMessage: \"Введите сумму от 1 до 1000 рублей\",\r\n          type: \"text\",\r\n          placeholder: \"Введите сумму от 1 до 1000 рублей\",\r\n          mask:\"9999\",\r\n          maskChar: null,\r\n        }\r\n   }\r\n  }\r\n\r\n\r\n\r\nclearInputs = () => {\r\n   \r\n  const formControls = {...this.state.formControls};\r\n  const keyForms =  Object.keys(formControls);\r\n  \r\n  keyForms.map(item  => {\r\n     \r\n    formControls[item].value = \"\"\r\n  \r\n })\r\n\r\n this.setState({\r\n  formControls\r\n })\r\n\r\n}\r\n\r\n\r\nsubmitHandler = event => {\r\n  \r\n  event.preventDefault();\r\n \r\n  const formControls = {...this.state.formControls};\r\n  const keyForms =  Object.keys(formControls);\r\n\r\n  keyForms.map(item  => {\r\n    \r\n     formControls[item] === this.state.formControls.phone\r\n    \r\n      ? this.validatePhone(formControls[item], 11) \r\n      : this.validateCost(formControls[item], 1000)\r\n    \r\n  })\r\n\r\n  if (formControls.phone.validate === true && formControls.cost.validate === true){\r\n      this.props.success();\r\n      this.clearInputs();\r\n    }\r\n\r\nthis.setState({\r\n    formControls\r\n  })\r\n\r\n}\r\n\r\ngetRandomFloat(min, max) {\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nvalidatePhone(inputValue, valid) {\r\n\r\n const value = inputValue.value.split(/[^0-9,]/).join('').trim();\r\n  \r\n  \r\n if (value.length === valid){\r\n    inputValue.validate = true;\r\n  } else {\r\n    inputValue.validate = false;\r\n  }\r\n  \r\n}\r\n\r\nvalidateCost(inputValue, valid){\r\n  \r\n  const value = inputValue.value.split(/[^0-9,]/).join('').trim();\r\n\r\n  if (value >=1 && value <= valid ){\r\n    inputValue.validate = true;\r\n  } else {\r\n    inputValue.validate = false;\r\n  }\r\n\r\n}\r\n\r\nonChange = (event,name) => {\r\n  \r\n  const formControls = {...this.state.formControls};\r\n  const control = {...formControls[name]};\r\n  control.value  = event.target.value;\r\n  formControls[name] = control\r\n  \r\n  this.setState({\r\n    formControls\r\n  })\r\n\r\n}\r\n\r\n  renderInputs(){\r\n    \r\n    \r\n     return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      \r\n      const control = this.state.formControls[controlName]\r\n      \r\n      return(\r\n         <FormInput\r\n          \r\n          key = {controlName + index}\r\n          type = {control.type}\r\n          value = {control.value}\r\n          valid = {control.validate}\r\n          errMsg = {control.errorMessage}\r\n          shouldValidate = {control.validation}\r\n          placeholder = {control.placeholder}\r\n          mask = {control.mask}\r\n          mskChar = {control.maskChar}\r\n          onChangs = { event => this.onChange(event,controlName)}\r\n         \r\n          />\r\n       )\r\n  \r\n  \r\n   \r\n      });\r\n \r\n  }\r\n  \r\nrender() {\r\n\r\n  \r\nconst sendStatusRandom = this.state.sendStatus[this.getRandomFloat(0,2)]\r\n  \r\n  return (\r\n\r\n\r\n    <React.Fragment>\r\n     \r\n      <StatusOperation \r\n         secondStep = {this.props.secondStep}\r\n         returnMain = {this.props.return}\r\n         steps = {this.props.steps}\r\n         status = {sendStatusRandom}\r\n       />\r\n\r\n      \r\n      <Transition\r\n        in={this.props.steps[1].active}\r\n        timeout={600}\r\n      >\r\n\r\n        {state =>\r\n          <form className={`payment-form ${state}`} onSubmit={this.submitHandler}>\r\n\r\n          <BtnExit return={this.props.return} />\r\n        \r\n            <img src={this.props.steps[1].active ? this.props.select[0].img : null} className=\"payment-form__img\"></img>\r\n          \r\n            <div className=\"payment-form__title\">Пополнение баланса</div>\r\n            \r\n            {this.renderInputs()}\r\n            \r\n            \r\n           <button type=\"submit\" className=\"payment-form__button\">ОПЛАТИТЬ</button>\r\n          </form>\r\n\r\n          \r\n        }\r\n        \r\n\r\n       </Transition>\r\n      </React.Fragment>\r\n     )\r\n   \r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default PaymentForm","import React from 'react';\r\n\r\n\r\n\r\nconst DropDownItem = props => {\r\n\r\n   const itemStyle = [\"dropdown-list__item\"];\r\n\r\n   if (props.opList.added){\r\n       itemStyle.push('active-op')\r\n   }\r\n\r\n  \r\n\r\nreturn (\r\n\r\n       <li className = {itemStyle.join(\" \")} onClick = {() => {props.funcAdd(props.opList) } }> \r\n           <img \r\n           src={window.location.origin + props.icon}\r\n           className = \"dropdown-list__img\"\r\n           alt ={props.name}\r\n           ></img>\r\n       <span className = \"dropdown-list__name\">{props.name}</span>\r\n       </li>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default DropDownItem;","import React from 'react';\r\nimport DropDownItem from '../dropDownList/dropDownItem/dropDownItem';\r\n\r\n\r\n\r\nconst DropDownList = props => {\r\n   \r\n   \r\n    return (\r\n\r\n       \r\n       <ul className={`dropdown-list ${props.class}`}>\r\n            \r\n            {props.oplist.map((item, index) => {\r\n\r\n                return (\r\n\r\n                   <DropDownItem \r\n\r\n                     key = {index}\r\n                     icon ={item.icon}\r\n                     name = {item.name}\r\n                     funcAdd = {props.funcAdd}\r\n                     opList ={item}\r\n                    />\r\n\r\n                )\r\n\r\n            })}\r\n        </ul>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default DropDownList;","import React, { useState } from 'react';\r\nimport DropdownList from '../dropDown/dropDownList/dropDownList';\r\nimport  './dropdown.scss';\r\nimport { Transition } from 'react-transition-group';\r\n\r\n\r\n  const Dropdown = props => {\r\n    \r\n   \r\n    const[dropdown,toggleDropdown] = useState(false)\r\n    const reverseIcon = [\"dropdown-icon\"];\r\n    const activeDrop =[\"dropdown-title\"];\r\n\r\n     if(dropdown){\r\n        reverseIcon.push('reverse')\r\n        activeDrop.push('active')\r\n    } \r\n   \r\n    \r\n    return(\r\n            \r\n              \r\n            <div className=\"dropdown\">\r\n                \r\n\r\n\r\n                  \r\n             <div className ={activeDrop.join(\" \")} onClick ={ ()=> toggleDropdown(!dropdown) }>Список операторов\r\n             <svg width=\"18\" height=\"9\" viewBox=\"0 0 18 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className={reverseIcon.join(' ')} >\r\n<path d=\"M8.98588 8.99696C8.686 8.99755 8.39537 8.89297 8.16446 8.7014L0.463656 2.27615C0.20155 2.05803 0.0367216 1.74459 0.005431 1.40479C-0.0258596 1.06498 0.0789508 0.726655 0.296805 0.464227C0.514659 0.201798 0.827711 0.0367669 1.16709 0.00543771C1.50648 -0.0258915 1.84439 0.0790476 2.10649 0.29717L8.98588 6.05419L15.8653 0.502779C15.9966 0.396035 16.1476 0.316321 16.3098 0.26822C16.4719 0.220118 16.642 0.204577 16.8101 0.222489C16.9783 0.240402 17.1413 0.291414 17.2897 0.372596C17.4381 0.453777 17.569 0.563527 17.675 0.695536C17.7925 0.827667 17.8815 0.982678 17.9364 1.15086C17.9914 1.31904 18.011 1.49676 17.9941 1.67289C17.9773 1.84903 17.9243 2.01977 17.8384 2.17444C17.7526 2.3291 17.6358 2.46435 17.4953 2.57171L9.79447 8.7785C9.55692 8.9398 9.27223 9.01671 8.98588 8.99696Z\" fill=\"#6916A1\"/>\r\n</svg>\r\n\r\n             </div>\r\n\r\n             <Transition\r\n              in ={dropdown}\r\n              timeout = {600}\r\n              unmountOnExit\r\n              \r\n             >\r\n             {state => \r\n             \r\n             <DropdownList \r\n             \r\n             oplist ={props.opList} \r\n             class = {state} \r\n             funcAdd = {props.funcAdd}\r\n            \r\n             />}\r\n            \r\n             </Transition>\r\n\r\n                 \r\n             </div>\r\n          \r\n             \r\n              \r\n    )\r\n\r\n}\r\n\r\n export default Dropdown","import React from 'react';\r\nimport  './backdrop.scss';\r\n\r\nconst Backdrop = props => <div className =\"backdrop\"></div>\r\n\r\nexport default Backdrop","import React from 'react';\r\nimport { Component } from \"react\";\r\nimport OperatorList from '../../components/operatorList/operatorList';\r\nimport StepList from '../../components/stepList/stepList'\r\nimport PaymentForm from '../../components/PaymentForm/paymentform';\r\nimport Dropdown from '../../components/dropDown/dropdown';\r\nimport Backdrop from '../../components/backdrop/backdrop';\r\n\r\n\r\nclass Payment extends Component {\r\n\r\n\r\n  state = {\r\n\r\n    operators: [\r\n      { name: \"МТС\",  img: '/img/mts.jpg', added: true, icon: '/img/icons/mts_icon.png' },\r\n      { name: \"Билайн\",  img: '/img/beeline.jpg', added: true , icon: '/img/icons/beeline_icon.png' },\r\n      { name: \"Мегафон\",  img: '/img/megaphon.jpg', added: true , icon: '/img/icons/megafon__icon.png' },\r\n      { name: \"ТЕЛЕ 2\",  img: '/img/tele2.jpg', added: false , icon: '/img/icons/tele2_icon.png' },\r\n      { name: \"Yota\",  img: '/img/yota.jpg', added: false , icon: '/img/icons/yota_icon.png' }\r\n    ],\r\n\r\n    steps: [\r\n\r\n      { step: 1, active: true },\r\n      { step: 2, active: false },\r\n      { step: 3, active: false }\r\n\r\n    ]\r\n\r\n  }\r\n\r\n  secondStep = () => {\r\n\r\n    const steps = this.state.steps;\r\n\r\n    steps[1].active = true;\r\n    steps[2].active = false\r\n\r\n    this.setState({\r\n      steps\r\n    })\r\n\r\n  }\r\n\r\n  lastStep = () => {\r\n    const steps = this.state.steps;\r\n\r\n    steps[2].active = true;\r\n\r\n    this.setState({\r\n      steps\r\n    })\r\n  }\r\n\r\n  returnMainPage = () => {\r\n\r\n    this.setState({\r\n      steps: [\r\n        { step: 1, active: true },\r\n        { step: 2, active: false },\r\n        { step: 3, active: false }\r\n      ]\r\n\r\n    })\r\n\r\n  }\r\n\r\n  onSelectOperator = op => {\r\n\r\n    const name = op.name;\r\n\r\n    this.secondStep();\r\n\r\n    this.setState({\r\n      active: name\r\n    })\r\n\r\n  }\r\n\r\n  addOperator = operator => {\r\n    \r\n    const stateAdd = operator;\r\n\r\n    if (operator.name === \"ТЕЛЕ 2\" || operator.name === \"Yota\"){\r\n      stateAdd.added ? stateAdd.added = false : stateAdd.added = true\r\n    }\r\n    \r\n    this.setState({\r\n      operator: stateAdd\r\n    })\r\n     \r\n  }\r\n\r\n  render() {\r\n\r\n    const operators = this.state.operators;\r\n    const selectOp = operators.filter(item => item.name === this.state.active);\r\n\r\n  return (\r\n      \r\n      \r\n    <React.Fragment>\r\n  \r\n       {\r\n       \r\n       this.state.steps[2].active === true \r\n       ? <Backdrop/>\r\n       : null\r\n       \r\n       }\r\n\r\n        <div className=\"header\">\r\n\r\n        <StepList\r\n            steps={this.state.steps}\r\n          />\r\n\r\n          <Dropdown \r\n            funcAdd = {this.addOperator}\r\n            opList = {operators}\r\n             />\r\n\r\n        </div>\r\n\r\n\r\n        {(this.state.steps[1].active || this.state.steps[2].active)\r\n\r\n          ? null\r\n\r\n          : <React.Fragment>\r\n            <p className=\"App-text\">Для оплаты</p>\r\n            <h1 className=\"App-title\">Выберите оператора</h1>\r\n           </React.Fragment>\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        <div className=\"form-wrapper\">\r\n\r\n            \r\n              <PaymentForm\r\n                return={this.returnMainPage}\r\n                steps={this.state.steps}\r\n                select={selectOp}\r\n                success = {this.lastStep}\r\n                secondStep = {this.secondStep}\r\n              />\r\n             \r\n\r\n        </div>\r\n\r\n        <div className=\"operator\">\r\n\r\n          <OperatorList\r\n            operator={operators}\r\n            onSelectOp={this.onSelectOperator}\r\n          />\r\n\r\n\r\n        </div>\r\n      </React.Fragment>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Payment","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport Payment from './container/terminal/payment'\n\n\nclass App extends Component {\n\n\n  render(){\n    \n    return(\n      \n      <Layout>\n        \n      \n       <Payment />\n       \n           \n      </Layout>\n    )\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}